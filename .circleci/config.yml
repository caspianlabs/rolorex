version: 2.1
orbs:
  python: circleci/python@0.2.1
jobs:
  build:
    docker:
      - image: circleci/python:3.8
        environment:
          DB_NAME: rolorex_test
          DB_USER: rolorex
          DB_PASSWORD: rolorex
          DB_HOST: localhost
          DJANGO_SETTINGS_MODULE: rolorex.settings.dev
      - image: circleci/postgres
        environment:
          POSTGRES_USER: rolorex
          POSTGRES_PASSWORD: rolorex
          POSTGRES_DB: rolorex_test
    steps:
      - checkout
      - python/load-cache
      - run:
          name: Install Dependencies
          command: pip install --user -r dev-requirements.txt
      - python/save-cache
      - run:
          name: Run Tests
          command: python -m coverage run manage.py test
      - run:
          name: Generate Coverage Reports
          command: python -m coverage html
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - store_artifacts:
          path: htmlcov
  build_and_push_docker:
    machine: true
    steps:
      - checkout
      - run:
          name: Build Image
          command: |
            chmod +x ./scripts/*.sh
            docker build -t caspianlabs/rolorex:$CIRCLE_SHA1 .
            docker tag caspianlabs/rolorex:$CIRCLE_SHA1 caspianlabs/rolorex:latest
      - run:
          name: Push Image
          command: |
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            docker push caspianlabs/rolorex
  deploy:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: sudo apt install -y rsync
      - run:
          name: Deploy to production
          command: |
            chmod +x ./scripts/*.sh
            ./scripts/deploy.sh

workflows:
  main:
    jobs:
      - build
      - build_and_push_docker:
          context: dockerhub
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_and_push_docker
          filters:
            branches:
              only: master
